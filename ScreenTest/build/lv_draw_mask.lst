ARM GAS  /tmp/ccjyIjk6.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lv_draw_mask.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/lvgl/src/draw/lv_draw_mask.c"
  20              		.section	.text.lv_draw_mask_rect_dsc_init,"ax",%progbits
  21              		.align	1
  22              		.global	lv_draw_mask_rect_dsc_init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	lv_draw_mask_rect_dsc_init:
  28              	.LVL0:
  29              	.LFB186:
   1:Drivers/lvgl/src/draw/lv_draw_mask.c **** /**
   2:Drivers/lvgl/src/draw/lv_draw_mask.c ****  * @file lv_draw_mask.c
   3:Drivers/lvgl/src/draw/lv_draw_mask.c ****  *
   4:Drivers/lvgl/src/draw/lv_draw_mask.c ****  */
   5:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
   6:Drivers/lvgl/src/draw/lv_draw_mask.c **** /*********************
   7:Drivers/lvgl/src/draw/lv_draw_mask.c ****  *      INCLUDES
   8:Drivers/lvgl/src/draw/lv_draw_mask.c ****  *********************/
   9:Drivers/lvgl/src/draw/lv_draw_mask.c **** #include "lv_draw_mask_private.h"
  10:Drivers/lvgl/src/draw/lv_draw_mask.c **** #include "lv_draw_private.h"
  11:Drivers/lvgl/src/draw/lv_draw_mask.c **** #include "../core/lv_refr.h"
  12:Drivers/lvgl/src/draw/lv_draw_mask.c **** #include "../misc/lv_math.h"
  13:Drivers/lvgl/src/draw/lv_draw_mask.c **** #include "../misc/lv_types.h"
  14:Drivers/lvgl/src/draw/lv_draw_mask.c **** #include "../stdlib/lv_string.h"
  15:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
  16:Drivers/lvgl/src/draw/lv_draw_mask.c **** /*********************
  17:Drivers/lvgl/src/draw/lv_draw_mask.c ****  *      DEFINES
  18:Drivers/lvgl/src/draw/lv_draw_mask.c ****  *********************/
  19:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
  20:Drivers/lvgl/src/draw/lv_draw_mask.c **** /**********************
  21:Drivers/lvgl/src/draw/lv_draw_mask.c ****  *      TYPEDEFS
  22:Drivers/lvgl/src/draw/lv_draw_mask.c ****  **********************/
  23:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
  24:Drivers/lvgl/src/draw/lv_draw_mask.c **** /**********************
  25:Drivers/lvgl/src/draw/lv_draw_mask.c ****  *  STATIC PROTOTYPES
  26:Drivers/lvgl/src/draw/lv_draw_mask.c ****  **********************/
  27:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
  28:Drivers/lvgl/src/draw/lv_draw_mask.c **** /**********************
  29:Drivers/lvgl/src/draw/lv_draw_mask.c ****  *  STATIC VARIABLES
ARM GAS  /tmp/ccjyIjk6.s 			page 2


  30:Drivers/lvgl/src/draw/lv_draw_mask.c ****  **********************/
  31:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
  32:Drivers/lvgl/src/draw/lv_draw_mask.c **** /**********************
  33:Drivers/lvgl/src/draw/lv_draw_mask.c ****  *      MACROS
  34:Drivers/lvgl/src/draw/lv_draw_mask.c ****  **********************/
  35:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
  36:Drivers/lvgl/src/draw/lv_draw_mask.c **** /**********************
  37:Drivers/lvgl/src/draw/lv_draw_mask.c ****  *   GLOBAL FUNCTIONS
  38:Drivers/lvgl/src/draw/lv_draw_mask.c ****  **********************/
  39:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
  40:Drivers/lvgl/src/draw/lv_draw_mask.c **** void LV_ATTRIBUTE_FAST_MEM lv_draw_mask_rect_dsc_init(lv_draw_mask_rect_dsc_t * dsc)
  41:Drivers/lvgl/src/draw/lv_draw_mask.c **** {
  30              		.loc 1 41 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 41 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  42:Drivers/lvgl/src/draw/lv_draw_mask.c ****     lv_memzero(dsc, sizeof(lv_draw_mask_rect_dsc_t));
  40              		.loc 1 42 5 is_stmt 1 view .LVU2
  41              	.LVL1:
  42              	.LBB4:
  43              	.LBI4:
  44              		.file 2 "Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h"
   1:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** /**
   2:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @file lv_string.h
   3:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  *
   4:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  */
   5:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** 
   6:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** #ifndef LV_STRING_H
   7:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** #define LV_STRING_H
   8:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** 
   9:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** #ifdef __cplusplus
  10:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** extern "C" {
  11:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** #endif
  12:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** 
  13:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** /*********************
  14:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  *      INCLUDES
  15:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  *********************/
  16:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** #include "../lv_conf_internal.h"
  17:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** #include "../misc/lv_types.h"
  18:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** 
  19:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** /*********************
  20:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  *      DEFINES
  21:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  *********************/
  22:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** 
  23:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** /**********************
  24:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  *      TYPEDEFS
  25:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  **********************/
  26:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** 
  27:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** /**********************
  28:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * GLOBAL PROTOTYPES
  29:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  **********************/
ARM GAS  /tmp/ccjyIjk6.s 			page 3


  30:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** 
  31:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** /**
  32:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @brief Copies a block of memory from a source address to a destination address.
  33:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @param dst Pointer to the destination array where the content is to be copied.
  34:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @param src Pointer to the source of data to be copied.
  35:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @param len Number of bytes to copy.
  36:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @return Pointer to the destination array.
  37:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @note The function does not check for any overlapping of the source and destination memory block
  38:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  */
  39:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** void * lv_memcpy(void * dst, const void * src, size_t len);
  40:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** 
  41:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** /**
  42:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @brief Fills a block of memory with a specified value.
  43:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @param dst Pointer to the destination array to fill with the specified value.
  44:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @param v Value to be set. The value is passed as an int, but the function fills
  45:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  *          the block of memory using the unsigned char conversion of this value.
  46:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @param len Number of bytes to be set to the value.
  47:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  */
  48:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** void lv_memset(void * dst, uint8_t v, size_t len);
  49:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** 
  50:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** /**
  51:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @brief Move a block of memory from source to destination
  52:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @param dst Pointer to the destination array where the content is to be copied.
  53:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @param src Pointer to the source of data to be copied.
  54:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @param len Number of bytes to copy
  55:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @return Pointer to the destination array.
  56:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  */
  57:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** void * lv_memmove(void * dst, const void * src, size_t len);
  58:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** 
  59:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** /**
  60:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @brief This function will compare two memory blocks
  61:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @param p1 Pointer to the first memory block
  62:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @param p2 Pointer to the second memory block
  63:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @param len Number of bytes to compare
  64:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @return The difference between the value of the first unmatching byte.
  65:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  */
  66:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** int lv_memcmp(const void * p1, const void * p2, size_t len);
  67:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** 
  68:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** /**
  69:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * Same as `memset(dst, 0x00, len)`.
  70:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @param dst pointer to the destination buffer
  71:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  * @param len number of byte to set
  72:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****  */
  73:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** static inline void lv_memzero(void * dst, size_t len)
  45              		.loc 2 73 20 view .LVU3
  46              	.LBB5:
  74:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h **** {
  75:Drivers/lvgl/src/draw/../misc/../stdlib/lv_string.h ****     lv_memset(dst, 0x00, len);
  47              		.loc 2 75 5 view .LVU4
  48 0002 3422     		movs	r2, #52
  49 0004 0021     		movs	r1, #0
  50 0006 FFF7FEFF 		bl	lv_memset
  51              	.LVL2:
  52              		.loc 2 75 5 is_stmt 0 view .LVU5
  53              	.LBE5:
  54              	.LBE4:
  43:Drivers/lvgl/src/draw/lv_draw_mask.c **** }
ARM GAS  /tmp/ccjyIjk6.s 			page 4


  55              		.loc 1 43 1 view .LVU6
  56 000a 08BD     		pop	{r3, pc}
  57              		.cfi_endproc
  58              	.LFE186:
  60              		.section	.text.lv_draw_task_get_mask_rect_dsc,"ax",%progbits
  61              		.align	1
  62              		.global	lv_draw_task_get_mask_rect_dsc
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  67              	lv_draw_task_get_mask_rect_dsc:
  68              	.LVL3:
  69              	.LFB187:
  44:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
  45:Drivers/lvgl/src/draw/lv_draw_mask.c **** lv_draw_mask_rect_dsc_t * lv_draw_task_get_mask_rect_dsc(lv_draw_task_t * task)
  46:Drivers/lvgl/src/draw/lv_draw_mask.c **** {
  70              		.loc 1 46 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  47:Drivers/lvgl/src/draw/lv_draw_mask.c ****     return task->type == LV_DRAW_TASK_TYPE_MASK_RECTANGLE ? (lv_draw_mask_rect_dsc_t *)task->draw_d
  75              		.loc 1 47 5 view .LVU8
  76              		.loc 1 47 16 is_stmt 0 view .LVU9
  77 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  78              		.loc 1 47 103 view .LVU10
  79 0002 0B2B     		cmp	r3, #11
  80 0004 01D1     		bne	.L5
  81              		.loc 1 47 103 discriminator 1 view .LVU11
  82 0006 406D     		ldr	r0, [r0, #84]
  83              	.LVL4:
  84              		.loc 1 47 103 discriminator 1 view .LVU12
  85 0008 7047     		bx	lr
  86              	.LVL5:
  87              	.L5:
  88              		.loc 1 47 103 discriminator 2 view .LVU13
  89 000a 0020     		movs	r0, #0
  90              	.LVL6:
  48:Drivers/lvgl/src/draw/lv_draw_mask.c **** }
  91              		.loc 1 48 1 view .LVU14
  92 000c 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE187:
  96              		.section	.text.lv_draw_mask_rect,"ax",%progbits
  97              		.align	1
  98              		.global	lv_draw_mask_rect
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 103              	lv_draw_mask_rect:
 104              	.LVL7:
 105              	.LFB188:
  49:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
  50:Drivers/lvgl/src/draw/lv_draw_mask.c **** void LV_ATTRIBUTE_FAST_MEM lv_draw_mask_rect(lv_layer_t * layer, const lv_draw_mask_rect_dsc_t * ds
  51:Drivers/lvgl/src/draw/lv_draw_mask.c **** {
 106              		.loc 1 51 1 is_stmt 1 view -0
 107              		.cfi_startproc
ARM GAS  /tmp/ccjyIjk6.s 			page 5


 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		.loc 1 51 1 is_stmt 0 view .LVU16
 111 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 24
 114              		.cfi_offset 3, -24
 115              		.cfi_offset 4, -20
 116              		.cfi_offset 5, -16
 117              		.cfi_offset 6, -12
 118              		.cfi_offset 7, -8
 119              		.cfi_offset 14, -4
 120 0002 0446     		mov	r4, r0
 121 0004 0D46     		mov	r5, r1
  52:Drivers/lvgl/src/draw/lv_draw_mask.c ****     if(!lv_color_format_has_alpha(layer->color_format)) {
 122              		.loc 1 52 5 is_stmt 1 view .LVU17
 123              		.loc 1 52 9 is_stmt 0 view .LVU18
 124 0006 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 125              	.LVL8:
 126              		.loc 1 52 9 view .LVU19
 127 0008 FFF7FEFF 		bl	lv_color_format_has_alpha
 128              	.LVL9:
 129              		.loc 1 52 7 discriminator 1 view .LVU20
 130 000c 00B9     		cbnz	r0, .L10
 131              	.L6:
  53:Drivers/lvgl/src/draw/lv_draw_mask.c ****         LV_LOG_WARN("Only layers with alpha channel can be masked");
  54:Drivers/lvgl/src/draw/lv_draw_mask.c ****         return;
  55:Drivers/lvgl/src/draw/lv_draw_mask.c ****     }
  56:Drivers/lvgl/src/draw/lv_draw_mask.c ****     LV_PROFILER_DRAW_BEGIN;
  57:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
  58:Drivers/lvgl/src/draw/lv_draw_mask.c ****     lv_draw_task_t * t = lv_draw_add_task(layer, &layer->buf_area, LV_DRAW_TASK_TYPE_MASK_RECTANGLE
  59:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
  60:Drivers/lvgl/src/draw/lv_draw_mask.c ****     lv_memcpy(t->draw_dsc, dsc, sizeof(*dsc));
  61:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
  62:Drivers/lvgl/src/draw/lv_draw_mask.c ****     lv_draw_dsc_base_t * base_dsc = t->draw_dsc;
  63:Drivers/lvgl/src/draw/lv_draw_mask.c ****     base_dsc->layer = layer;
  64:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
  65:Drivers/lvgl/src/draw/lv_draw_mask.c ****     if(base_dsc->obj && lv_obj_has_flag(base_dsc->obj, LV_OBJ_FLAG_SEND_DRAW_TASK_EVENTS)) {
  66:Drivers/lvgl/src/draw/lv_draw_mask.c ****         /*Disable sending LV_EVENT_DRAW_TASK_ADDED first to avoid triggering recursive
  67:Drivers/lvgl/src/draw/lv_draw_mask.c ****          *event calls due draw task adds in the event*/
  68:Drivers/lvgl/src/draw/lv_draw_mask.c ****         lv_obj_remove_flag(base_dsc->obj, LV_OBJ_FLAG_SEND_DRAW_TASK_EVENTS);
  69:Drivers/lvgl/src/draw/lv_draw_mask.c ****         lv_obj_send_event(dsc->base.obj, LV_EVENT_DRAW_TASK_ADDED, t);
  70:Drivers/lvgl/src/draw/lv_draw_mask.c ****         lv_obj_add_flag(base_dsc->obj, LV_OBJ_FLAG_SEND_DRAW_TASK_EVENTS);
  71:Drivers/lvgl/src/draw/lv_draw_mask.c ****     }
  72:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
  73:Drivers/lvgl/src/draw/lv_draw_mask.c ****     lv_draw_finalize_task_creation(layer, t);
  74:Drivers/lvgl/src/draw/lv_draw_mask.c ****     LV_PROFILER_DRAW_END;
  75:Drivers/lvgl/src/draw/lv_draw_mask.c **** }
 132              		.loc 1 75 1 view .LVU21
 133 000e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 134              	.LVL10:
 135              	.L10:
  56:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
 136              		.loc 1 56 27 is_stmt 1 view .LVU22
  58:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
 137              		.loc 1 58 5 view .LVU23
  58:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
ARM GAS  /tmp/ccjyIjk6.s 			page 6


 138              		.loc 1 58 26 is_stmt 0 view .LVU24
 139 0010 0B22     		movs	r2, #11
 140 0012 211D     		adds	r1, r4, #4
 141 0014 2046     		mov	r0, r4
 142 0016 FFF7FEFF 		bl	lv_draw_add_task
 143              	.LVL11:
 144 001a 0646     		mov	r6, r0
 145              	.LVL12:
  60:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
 146              		.loc 1 60 5 is_stmt 1 view .LVU25
 147 001c 3422     		movs	r2, #52
 148 001e 2946     		mov	r1, r5
 149 0020 406D     		ldr	r0, [r0, #84]
 150              	.LVL13:
  60:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
 151              		.loc 1 60 5 is_stmt 0 view .LVU26
 152 0022 FFF7FEFF 		bl	lv_memcpy
 153              	.LVL14:
  62:Drivers/lvgl/src/draw/lv_draw_mask.c ****     base_dsc->layer = layer;
 154              		.loc 1 62 5 is_stmt 1 view .LVU27
  62:Drivers/lvgl/src/draw/lv_draw_mask.c ****     base_dsc->layer = layer;
 155              		.loc 1 62 26 is_stmt 0 view .LVU28
 156 0026 776D     		ldr	r7, [r6, #84]
 157              	.LVL15:
  63:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
 158              		.loc 1 63 5 is_stmt 1 view .LVU29
  63:Drivers/lvgl/src/draw/lv_draw_mask.c **** 
 159              		.loc 1 63 21 is_stmt 0 view .LVU30
 160 0028 3C61     		str	r4, [r7, #16]
  65:Drivers/lvgl/src/draw/lv_draw_mask.c ****         /*Disable sending LV_EVENT_DRAW_TASK_ADDED first to avoid triggering recursive
 161              		.loc 1 65 5 is_stmt 1 view .LVU31
  65:Drivers/lvgl/src/draw/lv_draw_mask.c ****         /*Disable sending LV_EVENT_DRAW_TASK_ADDED first to avoid triggering recursive
 162              		.loc 1 65 16 is_stmt 0 view .LVU32
 163 002a 3868     		ldr	r0, [r7]
  65:Drivers/lvgl/src/draw/lv_draw_mask.c ****         /*Disable sending LV_EVENT_DRAW_TASK_ADDED first to avoid triggering recursive
 164              		.loc 1 65 7 view .LVU33
 165 002c 20B1     		cbz	r0, .L8
  65:Drivers/lvgl/src/draw/lv_draw_mask.c ****         /*Disable sending LV_EVENT_DRAW_TASK_ADDED first to avoid triggering recursive
 166              		.loc 1 65 25 discriminator 1 view .LVU34
 167 002e 4FF40021 		mov	r1, #524288
 168 0032 FFF7FEFF 		bl	lv_obj_has_flag
 169              	.LVL16:
  65:Drivers/lvgl/src/draw/lv_draw_mask.c ****         /*Disable sending LV_EVENT_DRAW_TASK_ADDED first to avoid triggering recursive
 170              		.loc 1 65 22 discriminator 1 view .LVU35
 171 0036 20B9     		cbnz	r0, .L11
 172              	.L8:
  73:Drivers/lvgl/src/draw/lv_draw_mask.c ****     LV_PROFILER_DRAW_END;
 173              		.loc 1 73 5 is_stmt 1 view .LVU36
 174 0038 3146     		mov	r1, r6
 175 003a 2046     		mov	r0, r4
 176 003c FFF7FEFF 		bl	lv_draw_finalize_task_creation
 177              	.LVL17:
  74:Drivers/lvgl/src/draw/lv_draw_mask.c **** }
 178              		.loc 1 74 25 view .LVU37
 179 0040 E5E7     		b	.L6
 180              	.L11:
  68:Drivers/lvgl/src/draw/lv_draw_mask.c ****         lv_obj_send_event(dsc->base.obj, LV_EVENT_DRAW_TASK_ADDED, t);
ARM GAS  /tmp/ccjyIjk6.s 			page 7


 181              		.loc 1 68 9 view .LVU38
 182 0042 4FF40021 		mov	r1, #524288
 183 0046 3868     		ldr	r0, [r7]
 184 0048 FFF7FEFF 		bl	lv_obj_remove_flag
 185              	.LVL18:
  69:Drivers/lvgl/src/draw/lv_draw_mask.c ****         lv_obj_add_flag(base_dsc->obj, LV_OBJ_FLAG_SEND_DRAW_TASK_EVENTS);
 186              		.loc 1 69 9 view .LVU39
 187 004c 3246     		mov	r2, r6
 188 004e 2221     		movs	r1, #34
 189 0050 2868     		ldr	r0, [r5]
 190 0052 FFF7FEFF 		bl	lv_obj_send_event
 191              	.LVL19:
  70:Drivers/lvgl/src/draw/lv_draw_mask.c ****     }
 192              		.loc 1 70 9 view .LVU40
 193 0056 4FF40021 		mov	r1, #524288
 194 005a 3868     		ldr	r0, [r7]
 195 005c FFF7FEFF 		bl	lv_obj_add_flag
 196              	.LVL20:
 197 0060 EAE7     		b	.L8
 198              		.cfi_endproc
 199              	.LFE188:
 201              		.text
 202              	.Letext0:
 203              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 204              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 205              		.file 5 "/usr/lib/gcc/arm-none-eabi/14.2.0/include/stddef.h"
 206              		.file 6 "Drivers/lvgl/src/draw/../misc/lv_types.h"
 207              		.file 7 "Drivers/lvgl/src/draw/lv_draw.h"
 208              		.file 8 "Drivers/lvgl/src/draw/lv_draw_private.h"
 209              		.file 9 "Drivers/lvgl/src/draw/lv_draw_mask_private.h"
 210              		.file 10 "Drivers/lvgl/src/draw/../misc/../font/../draw/lv_draw_buf.h"
 211              		.file 11 "Drivers/lvgl/src/draw/../misc/lv_color.h"
 212              		.file 12 "Drivers/lvgl/src/draw/../misc/lv_area.h"
 213              		.file 13 "Drivers/lvgl/src/draw/../misc/../font/../draw/lv_image_dsc.h"
 214              		.file 14 "Drivers/lvgl/src/draw/../core/../display/../misc/lv_event.h"
 215              		.file 15 "Drivers/lvgl/src/draw/../core/lv_obj.h"
 216              		.file 16 "Drivers/lvgl/src/draw/../core/lv_obj_event.h"
ARM GAS  /tmp/ccjyIjk6.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_mask.c
     /tmp/ccjyIjk6.s:21     .text.lv_draw_mask_rect_dsc_init:00000000 $t
     /tmp/ccjyIjk6.s:27     .text.lv_draw_mask_rect_dsc_init:00000000 lv_draw_mask_rect_dsc_init
     /tmp/ccjyIjk6.s:61     .text.lv_draw_task_get_mask_rect_dsc:00000000 $t
     /tmp/ccjyIjk6.s:67     .text.lv_draw_task_get_mask_rect_dsc:00000000 lv_draw_task_get_mask_rect_dsc
     /tmp/ccjyIjk6.s:97     .text.lv_draw_mask_rect:00000000 $t
     /tmp/ccjyIjk6.s:103    .text.lv_draw_mask_rect:00000000 lv_draw_mask_rect

UNDEFINED SYMBOLS
lv_memset
lv_color_format_has_alpha
lv_draw_add_task
lv_memcpy
lv_obj_has_flag
lv_draw_finalize_task_creation
lv_obj_remove_flag
lv_obj_send_event
lv_obj_add_flag
