ARM GAS  /tmp/cchLbVue.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"arm_mult_f32.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c"
  20              		.section	.text.arm_mult_f32,"ax",%progbits
  21              		.align	1
  22              		.global	arm_mult_f32
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	arm_mult_f32:
  28              	.LVL0:
  29              	.LFB135:
   1:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** /* ----------------------------------------------------------------------
   2:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * Project:      CMSIS DSP Library
   3:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * Title:        arm_mult_f32.c
   4:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * Description:  Floating-point vector multiplication
   5:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  *
   6:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * $Date:        27. January 2017
   7:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * $Revision:    V.1.5.1
   8:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  *
   9:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * Target Processor: Cortex-M cores
  10:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * -------------------------------------------------------------------- */
  11:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** /*
  12:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  *
  14:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  *
  16:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * not use this file except in compliance with the License.
  18:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * You may obtain a copy of the License at
  19:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  *
  20:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  *
  22:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * See the License for the specific language governing permissions and
  26:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * limitations under the License.
  27:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  */
  28:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
  29:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** #include "arm_math.h"
ARM GAS  /tmp/cchLbVue.s 			page 2


  30:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
  31:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** /**
  32:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * @ingroup groupMath
  33:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  */
  34:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
  35:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** /**
  36:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * @defgroup BasicMult Vector Multiplication
  37:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  *
  38:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * Element-by-element multiplication of two vectors.
  39:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  *
  40:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * <pre>
  41:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  *     pDst[n] = pSrcA[n] * pSrcB[n],   0 <= n < blockSize.
  42:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * </pre>
  43:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  *
  44:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * There are separate functions for floating-point, Q7, Q15, and Q31 data types.
  45:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  */
  46:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
  47:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** /**
  48:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * @addtogroup BasicMult
  49:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * @{
  50:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  */
  51:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
  52:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** /**
  53:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * @brief Floating-point vector multiplication.
  54:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * @param[in]       *pSrcA points to the first input vector
  55:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * @param[in]       *pSrcB points to the second input vector
  56:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * @param[out]      *pDst points to the output vector
  57:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * @param[in]       blockSize number of samples in each vector
  58:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  * @return none.
  59:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****  */
  60:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
  61:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** void arm_mult_f32(
  62:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   float32_t * pSrcA,
  63:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   float32_t * pSrcB,
  64:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   float32_t * pDst,
  65:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   uint32_t blockSize)
  66:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** {
  30              		.loc 1 66 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 66 1 is_stmt 0 view .LVU1
  36 0000 10B4     		push	{r4}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 4
  39              		.cfi_offset 4, -4
  67:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   uint32_t blkCnt;                               /* loop counters */
  40              		.loc 1 67 3 is_stmt 1 view .LVU2
  68:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** #if defined (ARM_MATH_DSP)
  69:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
  70:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  71:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   float32_t inA1, inA2, inA3, inA4;              /* temporary input variables */
  41              		.loc 1 71 3 view .LVU3
  72:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   float32_t inB1, inB2, inB3, inB4;              /* temporary input variables */
  42              		.loc 1 72 3 view .LVU4
  73:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   float32_t out1, out2, out3, out4;              /* temporary output variables */
ARM GAS  /tmp/cchLbVue.s 			page 3


  43              		.loc 1 73 3 view .LVU5
  74:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
  75:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   /* loop Unrolling */
  76:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   blkCnt = blockSize >> 2U;
  44              		.loc 1 76 3 view .LVU6
  45              		.loc 1 76 10 is_stmt 0 view .LVU7
  46 0002 9C08     		lsrs	r4, r3, #2
  47              	.LVL1:
  77:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
  78:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  79:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  80:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   while (blkCnt > 0U)
  48              		.loc 1 80 3 is_stmt 1 view .LVU8
  49              		.loc 1 80 9 is_stmt 0 view .LVU9
  50 0004 23E0     		b	.L2
  51              	.L3:
  81:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   {
  82:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* C = A * B */
  83:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* Multiply the inputs and store the results in output buffer */
  84:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* read sample from sourceA */
  85:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     inA1 = *pSrcA;
  52              		.loc 1 85 5 is_stmt 1 view .LVU10
  53              		.loc 1 85 10 is_stmt 0 view .LVU11
  54 0006 90ED006A 		vldr.32	s12, [r0]
  55              	.LVL2:
  86:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* read sample from sourceB */
  87:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     inB1 = *pSrcB;
  56              		.loc 1 87 5 is_stmt 1 view .LVU12
  57              		.loc 1 87 10 is_stmt 0 view .LVU13
  58 000a 91ED007A 		vldr.32	s14, [r1]
  59              	.LVL3:
  88:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* read sample from sourceA */
  89:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     inA2 = *(pSrcA + 1);
  60              		.loc 1 89 5 is_stmt 1 view .LVU14
  61              		.loc 1 89 10 is_stmt 0 view .LVU15
  62 000e D0ED016A 		vldr.32	s13, [r0, #4]
  63              	.LVL4:
  90:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* read sample from sourceB */
  91:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     inB2 = *(pSrcB + 1);
  64              		.loc 1 91 5 is_stmt 1 view .LVU16
  65              		.loc 1 91 10 is_stmt 0 view .LVU17
  66 0012 D1ED017A 		vldr.32	s15, [r1, #4]
  67              	.LVL5:
  92:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
  93:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* out = sourceA * sourceB */
  94:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     out1 = inA1 * inB1;
  68              		.loc 1 94 5 is_stmt 1 view .LVU18
  69              		.loc 1 94 10 is_stmt 0 view .LVU19
  70 0016 26EE076A 		vmul.f32	s12, s12, s14
  71              	.LVL6:
  95:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
  96:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* read sample from sourceA */
  97:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     inA3 = *(pSrcA + 2);
  72              		.loc 1 97 5 is_stmt 1 view .LVU20
  73              		.loc 1 97 10 is_stmt 0 view .LVU21
  74 001a 90ED027A 		vldr.32	s14, [r0, #8]
  75              	.LVL7:
ARM GAS  /tmp/cchLbVue.s 			page 4


  98:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* read sample from sourceB */
  99:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     inB3 = *(pSrcB + 2);
  76              		.loc 1 99 5 is_stmt 1 view .LVU22
  77              		.loc 1 99 10 is_stmt 0 view .LVU23
  78 001e D1ED025A 		vldr.32	s11, [r1, #8]
  79              	.LVL8:
 100:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 101:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* out = sourceA * sourceB */
 102:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     out2 = inA2 * inB2;
  80              		.loc 1 102 5 is_stmt 1 view .LVU24
  81              		.loc 1 102 10 is_stmt 0 view .LVU25
  82 0022 66EEA76A 		vmul.f32	s13, s13, s15
  83              	.LVL9:
 103:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 104:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* read sample from sourceA */
 105:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     inA4 = *(pSrcA + 3);
  84              		.loc 1 105 5 is_stmt 1 view .LVU26
  85              		.loc 1 105 10 is_stmt 0 view .LVU27
  86 0026 D0ED037A 		vldr.32	s15, [r0, #12]
  87              	.LVL10:
 106:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 107:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* store result to destination buffer */
 108:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     *pDst = out1;
  88              		.loc 1 108 5 is_stmt 1 view .LVU28
  89              		.loc 1 108 11 is_stmt 0 view .LVU29
  90 002a 82ED006A 		vstr.32	s12, [r2]
  91              	.LVL11:
 109:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 110:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* read sample from sourceB */
 111:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     inB4 = *(pSrcB + 3);
  92              		.loc 1 111 5 is_stmt 1 view .LVU30
  93              		.loc 1 111 10 is_stmt 0 view .LVU31
  94 002e 91ED036A 		vldr.32	s12, [r1, #12]
  95              	.LVL12:
 112:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 113:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* out = sourceA * sourceB */
 114:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     out3 = inA3 * inB3;
  96              		.loc 1 114 5 is_stmt 1 view .LVU32
  97              		.loc 1 114 10 is_stmt 0 view .LVU33
  98 0032 27EE257A 		vmul.f32	s14, s14, s11
  99              	.LVL13:
 115:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 116:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* store result to destination buffer */
 117:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     *(pDst + 1) = out2;
 100              		.loc 1 117 5 is_stmt 1 view .LVU34
 101              		.loc 1 117 17 is_stmt 0 view .LVU35
 102 0036 C2ED016A 		vstr.32	s13, [r2, #4]
 118:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 119:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* out = sourceA * sourceB */
 120:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     out4 = inA4 * inB4;
 103              		.loc 1 120 5 is_stmt 1 view .LVU36
 104              		.loc 1 120 10 is_stmt 0 view .LVU37
 105 003a 67EE867A 		vmul.f32	s15, s15, s12
 106              	.LVL14:
 121:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* store result to destination buffer */
 122:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     *(pDst + 2) = out3;
 107              		.loc 1 122 5 is_stmt 1 view .LVU38
ARM GAS  /tmp/cchLbVue.s 			page 5


 108              		.loc 1 122 17 is_stmt 0 view .LVU39
 109 003e 82ED027A 		vstr.32	s14, [r2, #8]
 123:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* store result to destination buffer */
 124:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     *(pDst + 3) = out4;
 110              		.loc 1 124 5 is_stmt 1 view .LVU40
 111              		.loc 1 124 17 is_stmt 0 view .LVU41
 112 0042 C2ED037A 		vstr.32	s15, [r2, #12]
 125:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 126:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 127:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* update pointers to process next samples */
 128:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     pSrcA += 4U;
 113              		.loc 1 128 5 is_stmt 1 view .LVU42
 114              		.loc 1 128 11 is_stmt 0 view .LVU43
 115 0046 1030     		adds	r0, r0, #16
 116              	.LVL15:
 129:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     pSrcB += 4U;
 117              		.loc 1 129 5 is_stmt 1 view .LVU44
 118              		.loc 1 129 11 is_stmt 0 view .LVU45
 119 0048 1031     		adds	r1, r1, #16
 120              	.LVL16:
 130:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     pDst += 4U;
 121              		.loc 1 130 5 is_stmt 1 view .LVU46
 122              		.loc 1 130 10 is_stmt 0 view .LVU47
 123 004a 1032     		adds	r2, r2, #16
 124              	.LVL17:
 131:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 132:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* Decrement the blockSize loop counter */
 133:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     blkCnt--;
 125              		.loc 1 133 5 is_stmt 1 view .LVU48
 126              		.loc 1 133 11 is_stmt 0 view .LVU49
 127 004c 013C     		subs	r4, r4, #1
 128              	.LVL18:
 129              	.L2:
  80:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   {
 130              		.loc 1 80 17 is_stmt 1 view .LVU50
 131 004e 002C     		cmp	r4, #0
 132 0050 D9D1     		bne	.L3
 134:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   }
 135:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 136:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 137:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****    ** No loop unrolling is used. */
 138:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   blkCnt = blockSize % 0x4U;
 133              		.loc 1 138 3 view .LVU51
 134              		.loc 1 138 10 is_stmt 0 view .LVU52
 135 0052 03F00303 		and	r3, r3, #3
 136              	.LVL19:
 139:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 140:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** #else
 141:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 142:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   /* Run the below code for Cortex-M0 */
 143:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 144:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   /* Initialize blkCnt with number of samples */
 145:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   blkCnt = blockSize;
 146:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 147:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 148:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 149:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   while (blkCnt > 0U)
ARM GAS  /tmp/cchLbVue.s 			page 6


 137              		.loc 1 149 3 is_stmt 1 view .LVU53
 138              		.loc 1 149 9 is_stmt 0 view .LVU54
 139 0056 08E0     		b	.L4
 140              	.L5:
 150:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   {
 151:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* C = A * B */
 152:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* Multiply the inputs and store the results in output buffer */
 153:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     *pDst++ = (*pSrcA++) * (*pSrcB++);
 141              		.loc 1 153 5 is_stmt 1 view .LVU55
 142              	.LVL20:
 143              		.loc 1 153 16 is_stmt 0 view .LVU56
 144 0058 F0EC017A 		vldmia.32	r0!, {s15}
 145              	.LVL21:
 146              		.loc 1 153 29 view .LVU57
 147 005c B1EC017A 		vldmia.32	r1!, {s14}
 148              	.LVL22:
 149              		.loc 1 153 26 view .LVU58
 150 0060 67EE877A 		vmul.f32	s15, s15, s14
 151              		.loc 1 153 13 view .LVU59
 152 0064 E2EC017A 		vstmia.32	r2!, {s15}
 153              	.LVL23:
 154:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** 
 155:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     /* Decrement the blockSize loop counter */
 156:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****     blkCnt--;
 154              		.loc 1 156 5 is_stmt 1 view .LVU60
 155              		.loc 1 156 11 is_stmt 0 view .LVU61
 156 0068 013B     		subs	r3, r3, #1
 157              	.LVL24:
 158              	.L4:
 149:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   {
 159              		.loc 1 149 17 is_stmt 1 view .LVU62
 160 006a 002B     		cmp	r3, #0
 161 006c F4D1     		bne	.L5
 157:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c ****   }
 158:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_mult_f32.c **** }
 162              		.loc 1 158 1 is_stmt 0 view .LVU63
 163 006e 5DF8044B 		ldr	r4, [sp], #4
 164              	.LCFI1:
 165              		.cfi_restore 4
 166              		.cfi_def_cfa_offset 0
 167 0072 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE135:
 171              		.text
 172              	.Letext0:
 173              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 174              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 175              		.file 4 "Drivers/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /tmp/cchLbVue.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 arm_mult_f32.c
     /tmp/cchLbVue.s:21     .text.arm_mult_f32:00000000 $t
     /tmp/cchLbVue.s:27     .text.arm_mult_f32:00000000 arm_mult_f32

NO UNDEFINED SYMBOLS
