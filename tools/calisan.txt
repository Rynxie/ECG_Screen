import wfdb
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np 

record_path = '/home/bugraalp/personalFiles/embedded/STM32/STM32CubeIDE/workspace_1.14.0/ECG_Screen/patients/16265' 

# 2. Excel'e kaydedilecek dosya adı
output_excel_file = '16265_ecg_time_trimmed_data.xlsx'


start_time_seconds = 0   # Başlangıç saniyesi 
end_time_seconds = 10  # Bitiş saniyesi # 

try:
    full_record_header = wfdb.rdheader(record_path)
    fs = full_record_header.fs # Örnekleme frekansını al

    # Numune indekslerini doğru örnekleme frekansına göre hesapla
    start_sample = int(start_time_seconds * fs)
    end_sample = int(end_time_seconds * fs)
    
    # Hesaplanan numune aralığı ile sinyal verisini oku
    # record objesi, kırpılmış sinyal verisini ve bu kısma ait meta verileri içerir.
    record = wfdb.rdrecord(record_path, sampto=end_sample, sampfrom=start_sample)
    
    # Sinyal verilerini Pandas DataFrame'e dönüştür
    ecg_df = pd.DataFrame(record.p_signal, columns=record.sig_name)

    print(f"Kayıt Adı: {record.record_name}")
    print(f"Örnekleme Frekansı (Hz): {fs}")
    # Orijinal kaydın toplam numune sayısını full_record_header.sig_len ile alıyoruz
    print(f"Orijinal Kayıt Toplam Numune Sayısı: {full_record_header.sig_len}")
    print(f"Kırpılmış Sinyal Boyutu (numune): {ecg_df.shape[0]}")
    print(f"Kırpılmış Sinyal Süresi (saniye): {ecg_df.shape[0] / fs:.2f} saniye")
    print(f"Sinyal Kanal Adları: {ecg_df.columns.tolist()}")

    # Excel çıktısı oluşturma
    ecg_df.to_excel(output_excel_file, index=False)

    print(f"ECG sinyal verileri başarıyla '{output_excel_file}' dosyasına kaydedildi.")

    # --- İsteğe Bağlı: Kırpılmış Sinyali Çizme ---
    plt.figure(figsize=(15, 5))
    # Zaman vektörünü numpy.arange kullanarak oluşturalım
    time_vector = np.arange(ecg_df.shape[0]) / fs
    plt.plot(time_vector, ecg_df.iloc[:, 0]) # İlk kanalı zaman eksenine göre çizer
    plt.title(f'Kırpılmış ECG Sinyali - Kanal 1 ({record.record_name})')
    plt.xlabel('Zaman (s)')
    plt.ylabel('Amplitüd (mV)')
    plt.grid(True)
    plt.show()

except Exception as e:
    print(f"\nBir hata oluştu: {e}")
    print(f"Hata detayı: {e}")

